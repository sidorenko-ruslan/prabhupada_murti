<div class="container create-sponsor-block">
  <h1>Help us get a contact information of Srila Prabhupada disciples.</h1>
  <br/>
  <h3>Please give us a correct contact information, especially the phone numbers and emails, so we could contact you or Srila Prabhupada disciple to deliver murti.</h3>
  <%= form_with(model: @discipleInfo, url: "/add_disciple") do |form| %>
    <% if @discipleInfo.errors.any? %>
      <ul>
        <% @discipleInfo.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    <% end %>
    <br/>
    <div>
      <div class="autocomplete">
        <%= form.label :spritual_name, "Spiritual name" %>
        <%= form.text_field :spritual_name, :class => "form-control", :required => true %>
      </div>
    </div>
    <br/>
    <div>
      <%= form.label :initiation, "Year and place of initiation (if don't know - leave it empty)" %>
      <%= form.text_field :initiation, :class => "form-control", :required => false %>
    </div>
    <br/>
    <div>
      <%= form.label :fullname, "Full name" %>
      <%= form.text_field :fullname, :class => "form-control", :required => true %>
    </div>
    <br/>
    <div>
      <%= form.label :address, "Address" %>
      <%= form.text_field :address, :class => "form-control", :required => true %>
    </div>
    <br/>
    <div>
      <%= form.label :temple, "Nearest ISKCON temple" %>
      <%= form.text_field :temple, :class => "form-control", :required => true %>
    </div>
    <br/>
    <div>
      <%= form.label :phone, "Phone number" %>
      <%= form.text_field :phone, :class => "form-control", :required => true %>
    </div>
    <br/>
    <div>
      <%= form.label :email, "E-mail address" %>
      <%= form.text_field :email, :class => "form-control", :required => true %>
    </div>
    <br/>
    <div>
      <div>Are you SP disciple?</div>
      <br/>
      <div>
        <%= form.check_box :imdisciple, :class => "form-check-input" %>
        <%= form.label :imdisciple, "Yes, i'm SP disciple" %>
      </div>
      <div>
        <%= form.check_box :imgivingcontact, :class => "form-check-input" %>
        <%= form.label :imgivingcontact, "No, i'm giving you contact of SP disciple" %>
      </div>
    </div>
    <br/>
    <br/>
    <%= form.submit "Send", class: "btn btn-light" %>
    <br/>
    <button class="btn" type="button" id="disciple-modal-button" data-bs-toggle="modal" data-bs-target="#disciple-modal">Disciple modal</button>
    <br/>
    <br/>
<% end %>
</div>
<%= render "home/partials/disciple_modal" %>

<style>
  .autocomplete {
    position: relative;
    display: inline-block;
    width: 100%;
  }
  .autocomplete-items {
    position: absolute;
    border: 1px solid #d4d4d4;
    border-bottom: none;
    border-top: none;
    z-index: 99;
    top: 100%;
    left: 0;
    right: 0;
  }
  .autocomplete-items div {
    padding: 10px;
    cursor: pointer;
    background-color: #fff;
    border-bottom: 1px solid #d4d4d4;
  }
  .autocomplete-items div:hover {
    background-color: #e9e9e9;
  }
  .autocomplete-active {
    background-color: DodgerBlue !important;
    color: #ffffff;
  }
</style>
<script>
  function autocomplete(inp, arr) {
    var currentFocus;
    inp.addEventListener("input", function(e) {
      var a, b, i, val = this.value;
      closeAllLists();
      if (!val) { return false;}
      currentFocus = -1;
      a = document.createElement("DIV");
      a.setAttribute("id", this.id + "autocomplete-list");
      a.setAttribute("class", "autocomplete-items");
      this.parentNode.appendChild(a);
      for (i = 0; i < arr.length; i++) {
        for (j = 0; j < arr[i].length - val.length + 1; j++) {
          if (arr[i].substr(j, val.length).toUpperCase() == val.toUpperCase()) {
            b = document.createElement("DIV");
            b.innerHTML = arr[i].substr(0, j);
            b.innerHTML += "<strong>" + arr[i].substr(j, val.length) + "</strong>";
            b.innerHTML += arr[i].substr(j + val.length);
            b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
            b.addEventListener("click", function(e) {
                inp.value = this.getElementsByTagName("input")[0].value;
                document.getElementById("disciple-modal-button").click();
                closeAllLists();
            });
            a.appendChild(b);
          }
        }
      }
    });
    inp.addEventListener("keydown", function(e) {
        var x = document.getElementById(this.id + "autocomplete-list");
        if (x) x = x.getElementsByTagName("div");
        if (e.keyCode == 40) {
          currentFocus++;
          addActive(x);
        } else if (e.keyCode == 38) {
          currentFocus--;
          addActive(x);
        } else if (e.keyCode == 13) {
          e.preventDefault();
          if (currentFocus > -1) {
            if (x) x[currentFocus].click();
          }
        }
    });
    function addActive(x) {
      if (!x) return false;
      removeActive(x);
      if (currentFocus >= x.length) currentFocus = 0;
      if (currentFocus < 0) currentFocus = (x.length - 1);
      x[currentFocus].classList.add("autocomplete-active");
    }
    function removeActive(x) {
      for (var i = 0; i < x.length; i++) {
        x[i].classList.remove("autocomplete-active");
      }
    }
    function closeAllLists(elmnt) {
      var x = document.getElementsByClassName("autocomplete-items");
      for (var i = 0; i < x.length; i++) {
        if (elmnt != x[i] && elmnt != inp) {
          x[i].parentNode.removeChild(x[i]);
        }
      }
    }
    document.addEventListener("click", function (e) {
        closeAllLists(e.target);
    });
  }

  var spiritualNames = <%= raw Initiation.all.map { |d| d.name + " (" + d.place + ")" } %>;
  var spiritualNameMap = <%= raw Initiation.all.map { |d| [d.name + " (" + d.place + ")", d.status] } %>;
  autocomplete(document.getElementById("disciple_info_spritual_name"), spiritualNames);
</script>
